import{_ as e,u as t,L as s,O as a,i as r,h as i,k as o,o as c,a as n,e as l,d as u,f as h}from"./index-CSrWMW-P.js";import{C as p,u as _,a as d,m as g}from"./chart-rmLuqf_x.js";import"./SLLoading-DNmSjfVT.js";const m={key:0,class:"chart-page"},M={key:0,class:"font-semibold pt-5 text-center"},f=e({__name:"ChartPage",setup(e){const f=t(),v=s(),b=a(),w=f.colors[0],S=(()=>(e,t)=>f.colors[t])();let q=new Map,x=[];const I=r([]),R=r("initing");(async function(){const{data:e}=await i.get(`/experiment/${v.id}/chart`);k(e)})().then((()=>{y.start(),R.value="success"}));const k=e=>{x=e.charts||[],I.value=e.namespaces||[];const t=x.map((e=>(e._cid=A(e.id),y.addSource(e.source),console.info("addSource",e.source,y._sources),e.id)));let s=!1;const a=I.value;I.value.forEach((e=>{s=!1,e.charts.forEach((e=>{"object"==typeof e&&(e=e.id);for(let a=0;a<t.length;a++){const r=t[a];if(r===e){s=!0,q.set(r,a);break}}if(!s)throw console.error("chart.id: ",e),console.error("charts: ",x),console.error("groups: ",I),new Error("Charts and groups cannot correspond.")}))})),a.forEach((e=>{e.charts=e.charts.map((e=>"object"==typeof e?x[q.get(e.id)]:x[q.get(e)]))})),I.value=a};class E{constructor(){this._map=new Map}canRequest(e){return!this._map.has(e)||"success"===this._map.get(e)}setPending(e){this._map.set(e,"pending")}setSuccess(e){this._map.set(e,"success")}setError(e){this._map.set(e,"error")}get(e){return this._map.get(e)}}class D{constructor(){this._map=new Map,this._intervalMap=new Map,this._callbackMap=new Map}setInterval(e,t,s=void 0){if(void 0===t)return;if(!s&&!this._callbackMap.get(e))return;let a=1e3;if(t<100)a=1e3;else if(t<500)a=1e3;else if(t<1e3)a=2e3;else{const e=Math.floor((t-1e3)/500);a=Math.min(8e3,2e3+1e3*e)}this._intervalMap.get(e)!==a&&(this.clear(e),s=s||this._callbackMap.get(e),this._map.set(e,setInterval(s,a)),this._callbackMap.set(e,s),this._intervalMap.set(e,a))}clear(e){const t=this._map.get(e);t&&clearInterval(t),this._map.delete(e),this._intervalMap.delete(e),this._callbackMap.delete(e)}clearAll(){console.log("清除所有轮询"),this._map.forEach((e=>{console.log("clear",e),clearInterval(e)})),this._map.clear(),this._intervalMap.clear()}}const y=new class{constructor(){this._sources=new Set,this._sourceMap=new Map,this._distributeMap=new Map,this._experiment_id=v.id,this.timer=null,this._timerMap=new D,this._intervalMap=new Map,this._request=new E,this._started=!1}setSourceData(e,t,s){t&&this._sourceMap.set(e,t),console.log("setSourceData",e,t,s);const a=this._distributeMap.get(e);if(!a)return this.setRequestStatus(e,s);Promise.all(Array.from(a.values()).map((a=>a(e,t,s)))).then((()=>{var a;console.log("all callbacks are executed"),this.setRequestStatus(e,s),this._timerMap.setInterval(e,null==(a=null==t?void 0:t.list)?void 0:a.length)}))}addSource(e){(e=e||[]).map((e=>{if(!this._started)return this._sources.add(e);this._sources.has(e)||(this._sources.add(e),console.warn("添加源并开启轮询: ",e),this._getTagRequestInterval(e))}))}start(){const e=[];this._sources.forEach((t=>{e.push(this._getSoureceData(t))})),Promise.all(e).then((()=>{if(!v.isRunning)return console.log("stop, experiment status is not 0");this._sources.forEach((e=>{this._getTagRequestInterval(e)})),this._started=!0}))}_getTagRequestInterval(e){var t;this._timerMap.setInterval(e,(null==(t=this._sourceMap.get(e))?void 0:t.list.length)||0,(()=>(v.charts&&k(v.charts),Number(this._experiment_id)!==Number(b.params.experimentId)?(this._timerMap.clearAll(),console.log("stop, experiment id is not equal to route id")):(this._getSoureceData(e),v.isRunning?void 0:(this._timerMap.clearAll(),console.log("stop, experiment status is not 0"))))))}_getSoureceData(e){return this._request.canRequest(e)?(this._request.setPending(e),i.get(`/experiment/${this._experiment_id}/tag/${e}`).then((t=>{console.log("更新"),this.setSourceData(e,t.data,null)})).catch((t=>{this.setSourceData(e,null,t)}))):console.log("abandon")}setRequestStatus(e,t){t?this._request.setError(e):this._request.setSuccess(e)}$on(e,t,s){console.log("订阅",e,t),(e=e||[]).map((e=>{const a=this._distributeMap.get(e);return a?a.set(t,s):this._distributeMap.set(e,new Map([[t,s]])),this._request.canRequest(e)?(console.warn("数据不存在，发起请求"),this._getSoureceData(e)):"error"===this._request.get(e)?(console.warn("数据请求失败，执行回调函数"),s(e,null,!0)):void 0}))}$off(e,t){(null==this?void 0:this._distributeMap)&&(e=e||[]).map((e=>{const s=this._distributeMap.get(e);s&&s.delete(t)}))}delete(){this._timerMap.clearAll()}},$=(e,t,s)=>y.$on(e,t,s),j=(e,t)=>y.$off(e,t);o((()=>{y.delete()}));const A=e=>e;return(e,t)=>"success"===R.value?(c(),n("div",m,[l(p,{groups:I.value,"update-chart-status":u(_),"update-namespace-status":u(d),media:u(g),"default-color":u(w),"get-color":u(S),subscribe:$,unsubscribe:j},null,8,["groups","update-chart-status","update-namespace-status","media","default-color","get-color"]),0===I.value.length?(c(),n("p",M,"Empty Chart")):h("",!0)])):h("",!0)}},[["__scopeId","data-v-dc50ebdf"]]);export{f as default};
